#pragma once

#ifdef _MSC_VER
	#pragma pack(push, 0x01)
#endif

namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x6D0 (0xD80 - 0x6B0)
// BlueprintGeneratedClass CreatureBaseRidableComponent.CreatureBaseRidableComponent_C
class UCreatureBaseRidableComponent_C : public UControllableRidableComponent
{
public:
	struct FPointerToUberGraphFrame              UberGraphFrame;                                    // 0x6B0(0x8)(ZeroConstructor, Transient, DuplicateTransient)
	struct FGameplayTagContainer                 T_CreatureIsBeingRidden;                           // 0x6B8(0x20)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                GE_CreatureIsBeingRidden;                          // 0x6D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                GE_CreatureIsBeingRidden_Passive;                  // 0x6E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                         bDebugDisplay;                                     // 0x6E8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_A070[0x7];                                     // Fixing Size After Last Property
	double                                       DebugTickRate;                                     // 0x6F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                               DebugServerRiderLocation;                          // 0x6F8(0x18)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       CapsuleRadiusOffset;                               // 0x710(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       CapsuleHalfHeightOffset;                           // 0x718(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                 T_RidingSpecialAbility;                            // 0x720(0x20)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UAnimSequence*                         IdleAnim_Add;                                      // 0x740(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                         RunAnim_Add;                                       // 0x748(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UBlendSpace*                           TurnBS;                                            // 0x750(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                       MinSpeedToRun;                                     // 0x758(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       Run_RampIntoSpeed;                                 // 0x760(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       Run_RampIntoSpeed_ADS;                             // 0x768(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       Run_PlayRate;                                      // 0x770(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       Run_PlayRate_ADS;                                  // 0x778(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       SpringAlpha;                                       // 0x780(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       SpringAlpha_ADS;                                   // 0x788(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       Idle_Alpha;                                        // 0x790(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       Idle_Alpha_ADS;                                    // 0x798(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       Run_Alpha;                                         // 0x7A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       Run_Alpha_ADS;                                     // 0x7A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       Turn_Alpha;                                        // 0x7B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       Turn_Alpha_ADS;                                    // 0x7B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                         Clamp_AnimPose_LastResort;                         // 0x7C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FRotator                              Clamp_Foot_R_Adjust;                               // 0x7C8(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                              Clamp_Foot_L_Adjust;                               // 0x7E0(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	double                                       CapsuleRadiusOffset_Emote;                         // 0x7F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       CapsuleHalfHeightOffset_Emote;                     // 0x800(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                               Clamp_Location_Offset;                             // 0x808(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                              Clamp_Rotation_Offset;                             // 0x820(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                               Clamp_ScaleAdjust;                                 // 0x838(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                  RidableSocketName;                                 // 0x850(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_A071[0x4];                                     // Fixing Size After Last Property
	double                                       RidableSocket_Alpha;                               // 0x858(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>           GE_CooldownOverride;                               // 0x860(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FGameplayTagContainer                 T_CreatureOverrideCooldown;                        // 0x868(0x20)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<enum class ECollisionChannel, enum class ECollisionResponse> OriginalCollisionResponseMap;                      // 0x888(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSoundIndicatorIconPicker             RidingSoundIndicatorIconOverride;                  // 0x8D8(0x28)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_            AudioOnJump;                                       // 0x900(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            AudioOnJumpApex;                                   // 0x910(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	uint8                                        MovementMode;                                      // 0x920(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         bFalling;                                          // 0x921(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_A073[0x6];                                     // Fixing Size After Last Property
	struct FScalableFloat                        RidingAbilityEnable_HF;                            // 0x928(0x28)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                       JumpAttach_GroundHeightMin;                        // 0x950(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       JumpAttach_GroundHeightBuffer;                     // 0x958(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         UseAltRidingMessage;                               // 0x960(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_A074[0x7];                                     // Fixing Size After Last Property
	class FText                                  Riding_Interaction_Text;                           // 0x968(0x18)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                       CurrentEnergyValue;                                // 0x980(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	class UPlayerRiderComponent_C*               PlayerRiderComponentRef;                           // 0x988(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNPC_Pawn_Wildlife_Parent_C*           NPCPawnWildlifeRef;                                // 0x990(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                       PreviousTimeTracked;                               // 0x998(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       EnergyTrackingDeltaTime;                           // 0x9A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         ShouldHaveEnergy;                                  // 0x9A8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_A078[0x7];                                     // Fixing Size After Last Property
	double                                       EnergyRateOfDecayStopped;                          // 0x9B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         AllowUpdateEnergyTrackingTick;                     // 0x9B8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         LastBeingRiddenState;                              // 0x9B9(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_A07A[0x6];                                     // Fixing Size After Last Property
	struct FCurveTableRowHandle                  EnergyRateOfDecayMoving;                           // 0x9C0(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FCurveTableRowHandle                  EnergyRateOfDecaySprinting;                        // 0x9D0(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                       CurrentEnergyRateOfRecharge;                       // 0x9E0(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCurveTableRowHandle                  ExhaustedEnergyRateOfRecharge;                     // 0x9E8(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                       EnergyWarningThreshold;                            // 0x9F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       EnergyCriticalThreshold;                           // 0xA00(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         EnergyWarningActive;                               // 0xA08(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         EnergyCriticalActive;                              // 0xA09(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_A07D[0x6];                                     // Fixing Size After Last Property
	double                                       MinMovementSpeedTreshold;                          // 0xA10(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         IsJumping;                                         // 0xA18(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_A07E[0x7];                                     // Fixing Size After Last Property
	double                                       EnergyRegenThreshold;                              // 0xA20(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         AlwaysRegenWhenNotRidden;                          // 0xA28(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_A07F[0x7];                                     // Fixing Size After Last Property
	TSubclassOf<class UGameplayEffect>           GE_EnergyWarning;                                  // 0xA30(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>           GE_EnergyCritical;                                 // 0xA38(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>           GE_EnergyDepleted;                                 // 0xA40(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FGameplayTagContainer                 T_EnergyWarning;                                   // 0xA48(0x20)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                 T_EnergyCritical;                                  // 0xA68(0x20)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                 T_EnergyDepleted;                                  // 0xA88(0x20)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                 T_CannotRideBucket;                                // 0xAA8(0x20)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                Gameplay_Effect;                                   // 0xAC8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                          SprintingAbilityTag;                               // 0xAD0(0x4)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_A082[0x4];                                     // Fixing Size After Last Property
	class UClass*                                GE_EatToRefuel;                                    // 0xAD8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                           IconBrush;                                         // 0xAE0(0xC0)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                GE_Creature_Sprint;                                // 0xBA0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundLibrary*                         RidingFoleySoundLibrary;                           // 0xBA8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                 TagsPreventSprinting;                              // 0xBB0(0x20)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_            RidableUIStart;                                    // 0xBD0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            RidableUIUpdateEnergy;                             // 0xBE0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FGameplayTag                          OutOfEnergySoundLibTag;                            // 0xBF0(0x4)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                          SprintStartSoundLibTag;                            // 0xBF4(0x4)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	enum class ETInteractionType                 Riding_Interaction_Type;                           // 0xBF8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_A084[0x7];                                     // Fixing Size After Last Property
	double                                       StartInAirTimestamp;                               // 0xC00(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                          RetryJumpExitTimerHandle;                          // 0xC08(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                       JumpExitBufferStartTimeStamp;                      // 0xC10(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                        JumpExitBufferTime;                                // 0xC18(0x28)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTimerHandle                          JumpExitBufferTimerHandle;                         // 0xC40(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                          MountLandedCueTag;                                 // 0xC48(0x4)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_A086[0x4];                                     // Fixing Size After Last Property
	TSubclassOf<class UGameplayEffect>           GE_BlockCreatureAttackOnDismount;                  // 0xC50(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                         EnergyRegenActive;                                 // 0xC58(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_A087[0x7];                                     // Fixing Size After Last Property
	struct FGameplayTagContainer                 BlockPetting_TagContainer;                         // 0xC60(0x20)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                         InfiniteStaminaBuffEnabled;                        // 0xC80(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_A088[0x3];                                     // Fixing Size After Last Property
	struct FGameplayTag                          InfiniteStaminaEffect_GameplayCueTag;              // 0xC84(0x4)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                 Cannot_Ride_Rider_Bucket;                          // 0xC88(0x20)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                        JumpFatigue_Enabled;                               // 0xCA8(0x28)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                        JumpFatigue_ApplyFatigueMinJumpCount;              // 0xCD0(0x28)(Edit, BlueprintVisible, DisableEditOnInstance)
	TSubclassOf<class UGameplayEffect>           JumpFatigueGameplayEffect;                         // 0xCF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                         JumpFatigueDebugEnabled;                           // 0xD00(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_A089[0x3];                                     // Fixing Size After Last Property
	int32                                        JumpFatigueJumpCount;                              // 0xD04(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       JumpFatigue_LastLandingTimeStamp;                  // 0xD08(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                        JumpFatigue_ResetCounterDelay;                     // 0xD10(0x28)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                         JumpFatigue_ShouldTimeStampNextLanding;            // 0xD38(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_A08A[0x3];                                     // Fixing Size After Last Property
	struct FActiveGameplayEffectHandle           JumpFatigue_GEHandle;                              // 0xD3C(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_A08B[0x4];                                     // Fixing Size After Last Property
	struct FTimerHandle                          JumpFatigue_RemovalTimerHandle;                    // 0xD48(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                        JumpFatigue_GeDurationPostLanding;                 // 0xD50(0x28)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                GE_NotPetable_IsBeingRidden;                       // 0xD78(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("CreatureBaseRidableComponent_C");
		return Clss;
	}

	void GetRidingInfoFromTarget(double* JumpAttachGroundHeightMin, double* JumpAttachGroundHeightBuffer, bool* UsesAltRidingMessage);
	void JumpFatigue_LandTimeStamp(double CallFunc_GetGameTimeInSeconds_ReturnValue);
	void JumpFatigue_CheckApplyFatigue(class UActor* CallFunc_GetOwner_ReturnValue, class UFortAIPawn* K2Node_DynamicCast_AsFort_AIPawn, bool K2Node_DynamicCast_bSuccess, bool CallFunc_GetValueAsBool_ReturnValue, int32 CallFunc_GetValueAsInteger_ReturnValue, bool CallFunc_IsValidClass_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, const struct FActiveGameplayEffectHandle& CallFunc_BP_FortApplyGameplayEffectToSelf_ReturnValue);
	void JumpFatigue_CountJumps(int32 CallFunc_GetActiveGameplayEffectStackCount_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, double CallFunc_GetGameTimeInSeconds_ReturnValue, float CallFunc_GetValueAtLevel_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, bool CallFunc_LessEqual_DoubleDouble_ReturnValue, int32 Temp_int_Variable, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_GetValueAsBool_ReturnValue, double CallFunc_LessEqual_DoubleDouble_B_ImplicitCast);
	void JumpFatigue_RemoveFatigue(class UActor* CallFunc_GetOwner_ReturnValue, class UFortAIPawn* K2Node_DynamicCast_AsFort_AIPawn, bool K2Node_DynamicCast_bSuccess, bool CallFunc_RemoveActiveGameplayEffect_ReturnValue);
	void JumpFatigue_Landed(int32 CallFunc_GetActiveGameplayEffectStackCount_ReturnValue, float CallFunc_GetValueAtLevel_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue, bool CallFunc_GetValueAsBool_ReturnValue, bool CallFunc_IsValidClass_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void Should_Convert_Jump_Exit_to_Jump(bool* Out, double CallFunc_GetTimeSeconds_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, float CallFunc_GetValueAtLevel_ReturnValue, bool CallFunc_LessEqual_DoubleDouble_ReturnValue, double CallFunc_LessEqual_DoubleDouble_B_ImplicitCast);
	void ShouldBufferJumpExitToRetryJump(bool* Output, float CallFunc_GetValueAtLevel_ReturnValue, float CallFunc_GetValueAtLevel_ReturnValue_1, const struct FVector& CallFunc_Conv_DoubleToVector_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue, float CallFunc_GetValueAtLevel_ReturnValue_2, const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, double CallFunc_GetTimeSeconds_ReturnValue, TArray<class UActor*>& Temp_object_Variable, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, double CallFunc_BreakVector_X, double CallFunc_BreakVector_Y, double CallFunc_BreakVector_Z, const struct FVector& CallFunc_Multiply_VectorVector_ReturnValue, bool CallFunc_Less_DoubleDouble_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FHitResult& CallFunc_SphereTraceSingle_OutHit, bool CallFunc_SphereTraceSingle_ReturnValue, double CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast, double CallFunc_Greater_DoubleDouble_A_ImplicitCast);
	void SetInfiniteStaminaBuff(bool Enabled, class UActor* CallFunc_GetOwner_ReturnValue, const struct FGameplayCueParameters& CallFunc_MakeGameplayCueParameters_ReturnValue, const struct FGameplayCueParameters& CallFunc_MakeGameplayCueParameters_ReturnValue_1, class UActor* CallFunc_GetOwner_ReturnValue_1);
	bool CanBePet(class URiderComponent* Rider, class UActor* CallFunc_GetOwner_ReturnValue, class UActor* CallFunc_GetOwner_ReturnValue_1, class UFortPawn* K2Node_DynamicCast_AsFort_Pawn, bool K2Node_DynamicCast_bSuccess, class UFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_IsSurfaceSwimming_ReturnValue, class UControllingRiderComponent* K2Node_DynamicCast_AsControlling_Rider_Component, bool K2Node_DynamicCast_bSuccess_2, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsTryingToMove_ReturnValue, bool CallFunc_IsFalling_ReturnValue, bool CallFunc_CanBePet_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, TScriptInterface<class UGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput, bool CallFunc_HasAnyMatchingGameplayTags_ReturnValue);
	void CanJumpExit(bool* CanJumpExit, const struct FScalableFloat& JumpExitDurationThreshold, bool CallFunc_IsValid_ReturnValue, float CallFunc_GetValueAtLevel_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsFalling_ReturnValue, double CallFunc_GetTimeSeconds_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue_1, const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue, double CallFunc_Greater_DoubleDouble_B_ImplicitCast, double CallFunc_Subtract_DoubleDouble_A_ImplicitCast, float CallFunc_K2_SetTimer_Time_ImplicitCast);
	void UpdateLootAnimalGlow(double Scale, bool Temp_bool_Variable, const struct FGameplayTagContainer& CallFunc_MakeGameplayTagContainerFromTag_ReturnValue, class UActor* CallFunc_GetOwner_ReturnValue, TArray<class UNiagaraComponent*>& CallFunc_GetComponentsByTag_ReturnValue, TScriptInterface<class UGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface, bool K2Node_DynamicCast_bSuccess, class UNiagaraComponent* CallFunc_Array_Get_Item, bool CallFunc_HasAnyMatchingGameplayTags_ReturnValue, float CallFunc_SetFloatParameter_Param_ImplicitCast);
	void OnRep_currentEnergyValue(bool CallFunc_Greater_DoubleDouble_ReturnValue);
	void Propagate_Immunity_Fall_Damage(const struct FScalableFloat& CanProbagateImmunityFallDanage, class UActor* RiderActor, const TArray<TSubclassOf<class UGameplayEffect>>& GE_ImmunityFallDamage, TArray<TSubclassOf<class UGameplayEffect>>& K2Node_MakeArray_Array, bool CallFunc_GetValueAsBool_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UActor* CallFunc_GetOwner_ReturnValue, class UActor* CallFunc_GetOwner_ReturnValue_1, class UFortPawn* K2Node_DynamicCast_AsFort_Pawn, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue_1, TScriptInterface<class UGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput, bool CallFunc_HasMatchingGameplayTag_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess);
	bool CanRiderPlayEmote(class URiderComponent* Rider);
	void HandleEnemyFoleySoundLibrary(class UActorComponent* Rider, bool bIsRiding, class USoundLibrarySubsystem* CallFunc_GetWorldSubsystem_ReturnValue, double CallFunc_SelectFloat_ReturnValue, class UActor* CallFunc_GetOwner_ReturnValue, class UFortPawn* K2Node_DynamicCast_AsFort_Pawn, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, enum class EFortTeamAffiliation CallFunc_GetTeamAffiliationForActorToLocalPlayer_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, float K2Node_VariableSet_MaxFootstepDistance_ImplicitCast);
	void OnMovementModeChanged(class UCharacter* Character, enum class EMovementMode PrevMovementMode, uint8 PreviousCustomMode, class UFortPawn* K2Node_DynamicCast_AsFort_Pawn, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsSurfaceSwimming_ReturnValue, bool CallFunc_IsFalling_ReturnValue, double CallFunc_GetTimeSeconds_ReturnValue, class UActor* CallFunc_GetOwner_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_HasAuthority_ReturnValue);
	void IsSwimming(bool* IsSwimming, class UActor* CallFunc_GetOwner_ReturnValue, class UFortPawn* K2Node_DynamicCast_AsFort_Pawn, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsSurfaceSwimming_ReturnValue);
	void StopSprinting(class UActor* CallFunc_GetOwner_ReturnValue, class UActor* CallFunc_GetOwner_ReturnValue_1, class UFortAbilitySystemComponent* CallFunc_GetFortAbilitySystemComponent_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UActor* CallFunc_GetOwner_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_1, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, bool CallFunc_IsValid_ReturnValue_2);
	void RemoveGEByTag(const struct FGameplayTagContainer& Tags, class UActor* CallFunc_GetOwner_ReturnValue, class UFortAbilitySystemComponent* CallFunc_GetFortAbilitySystemComponent_ReturnValue, int32 CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue);
	void ApplyGEToSelf(TSubclassOf<class UGameplayEffect> GameplayEffectClass, bool* IsValidClass, class UActor* CallFunc_GetOwner_ReturnValue, bool CallFunc_IsValidClass_ReturnValue, class UFortAbilitySystemComponent* CallFunc_GetFortAbilitySystemComponent_ReturnValue, const struct FActiveGameplayEffectHandle& CallFunc_BP_FortApplyGameplayEffectToSelf_ReturnValue);
	void KickRiderOffSelf(class UActor* CallFunc_GetOwner_ReturnValue, class UActor* CallFunc_GetOwner_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, bool CallFunc_ToggleRiding_bChangedRiding);
	void DetermineRateOfChange(double* RateOfChange, bool CallFunc_IsSprinting_ReturnValue, float CallFunc_EvaluateCurveTableRow_OutXY, bool CallFunc_EvaluateCurveTableRow_ReturnValue, float CallFunc_EvaluateCurveTableRow_OutXY_1, bool CallFunc_EvaluateCurveTableRow_ReturnValue_1, bool CallFunc_IsBeingRidden_ReturnValue, bool CallFunc_IsValid_ReturnValue, const struct FVector& CallFunc_GetLastUpdateVelocity_ReturnValue, double CallFunc_VSize_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue, double K2Node_FunctionResult_RateOfChange_ImplicitCast, double K2Node_FunctionResult_RateOfChange_ImplicitCast_1);
	void CommitEnergyCosts(bool RequireAllEnergy, double EnergyCost, bool* Success, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, bool CallFunc_Greater_DoubleDouble_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void TestThreshold(bool IsDecaying, double CurrentValue, double TestTreshold, bool PreviousState, bool* CrossedThreshold, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, bool CallFunc_Less_DoubleDouble_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1);
	void SetWildlifeHealth(bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, float CallFunc_GetHealth_ReturnValue, float CallFunc_GetMaxHealth_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue, double CallFunc_Divide_DoubleDouble_A_ImplicitCast, double CallFunc_Divide_DoubleDouble_B_ImplicitCast);
	void UpdateValue(double TargetValue, double RateOfChange, double DeltaTime, double* UpdatedValue, bool* EnergyDepleted, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue, bool CallFunc_LessEqual_DoubleDouble_ReturnValue, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue);
	void ToggleRiding(class UActor* PlayerPawn, class UActor* Target, bool ShouldRide, bool* bChangedRiding, TScriptInterface<class UGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface, bool K2Node_DynamicCast_bSuccess, TScriptInterface<class UGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface_1, bool K2Node_DynamicCast_bSuccess_1, class URiderComponent* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_HasAnyMatchingGameplayTags_ReturnValue, bool CallFunc_StopRidingActor_ReturnValue, bool CallFunc_StartRidingActor_ReturnValue, class UControllingRiderComponent* K2Node_DynamicCast_AsControlling_Rider_Component, bool K2Node_DynamicCast_bSuccess_2, bool CallFunc_IsValid_ReturnValue, bool Temp_bool_Variable, bool CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue, bool Temp_bool_Variable_1, bool CallFunc_Not_PreBool_ReturnValue_1);
	void RestoreCollisionResponses(int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TArray<enum class ECollisionChannel>& CallFunc_Map_Keys_Keys, int32 CallFunc_Array_Length_ReturnValue, enum class ECollisionChannel CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, TArray<enum class ECollisionChannel>& K2Node_MakeArray_Array, enum class ECollisionResponse CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void ApplyCollisionResponse(TArray<enum class ECollisionChannel>& Channels, enum class ECollisionResponse Response, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, enum class ECollisionChannel CallFunc_Array_Get_Item, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class UActor* CallFunc_GetOwner_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UCapsuleComponent* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, enum class ECollisionResponse CallFunc_GetCollisionResponseToChannel_ReturnValue);
	bool ShouldCameraFocusOnRidable(class URiderComponent* Rider);
	void UpdateAnimInputBool(class UFortPawn* FortPawn, bool IsBeingRidden, class UFortAnimInputEvent_Bool* CallFunc_CreateAnimInputEvent_Bool_ReturnValue);
	void GetRiderCapsuleSize(class URiderComponent* Rider, double* RiderCapsuleRadius, double* RiderCapsuleHH, bool CallFunc_IsValid_ReturnValue, class UActor* CallFunc_GetOwner_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class UCapsuleComponent* CallFunc_GetComponentByClass_ReturnValue, float CallFunc_GetUnscaledCapsuleSize_OutRadius, float CallFunc_GetUnscaledCapsuleSize_OutHalfHeight, double K2Node_FunctionResult_RiderCapsuleRadius_ImplicitCast, double K2Node_FunctionResult_RiderCapsuleHH_ImplicitCast);
	void GetRidingEmoteCapsuleSize(class URiderComponent* Rider, float OriginalRadius, float OriginalHalfHeight, float* OutRadius, float* OutHalfHeight, float CallFunc_GetRidingCapsuleSize_OutRadius, float CallFunc_GetRidingCapsuleSize_OutHalfHeight, double CallFunc_Add_DoubleDouble_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue_1, float K2Node_FunctionResult_OutRadius_ImplicitCast, float K2Node_FunctionResult_OutHalfHeight_ImplicitCast, double CallFunc_Add_DoubleDouble_A_ImplicitCast, double CallFunc_Add_DoubleDouble_A_ImplicitCast_1);
	void GetRidingCapsuleSize(class URiderComponent* Rider, float OriginalRadius, float OriginalHalfHeight, float* OutRadius, float* OutHalfHeight, double CallFunc_GetRiderCapsuleSize_RiderCapsuleRadius, double CallFunc_GetRiderCapsuleSize_RiderCapsuleHH, double CallFunc_Add_DoubleDouble_ReturnValue, double CallFunc_FMax_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue_1, double CallFunc_FMax_ReturnValue_1, double CallFunc_Add_DoubleDouble_A_ImplicitCast, double CallFunc_Add_DoubleDouble_A_ImplicitCast_1, float K2Node_FunctionResult_OutRadius_ImplicitCast, float K2Node_FunctionResult_OutHalfHeight_ImplicitCast);
	void OnRep_IdleAnim_Add();
	bool ShouldSetAsViewTarget(class URiderComponent* Rider);
	void GetRiderLocation(struct FVector* Location, class UActor* CallFunc_GetOwner_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UActor* CallFunc_GetOwner_ReturnValue_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1);
	void Removed_AD51144144164FD235EE5BA4F6E87456();
	void Added_FBD936634BCC61A726DA279226E2F4BE();
	void Removed_C4C6E29B4217C014B9DE0E80B7134D6E();
	void ToggleRidingAlternative();
	void ReceiveBeginPlay();
	void HandleRiderStartedRiding(class URiderComponent* Rider);
	void HandleRiderStoppedRiding(class URiderComponent* Rider);
	void UpdateDebug();
	void HandleAbilityHeld();
	void HandleAbilityStarted();
	void HandleAbilityStopped();
	void HandleJumpStarted();
	void OnJumping(double JumpPitchInterpSpeed);
	void OnJumpingApex();
	void NPCPawnInteractWithDispatcher_Event_0(class UActor* AIPawn, class UFortPlayerPawn* InteractingPlayerPawn);
	void EnergyTrackingStart();
	void EnergyTrackingStop();
	void ReceiveEndPlay(enum class EEndPlayReason EndPlayReason);
	void UpdateEnergy();
	void ConvertedDispatcher_Event_0(bool Converted, class UFortPawn* InstigatorPawn);
	void OnPawnHealthChanged_Event_0();
	void UseEnergyAmountServer(double EnergyCost);
	void HandleCancelSprint(bool bAbilityInputHeld, bool bForceCancel);
	void CheatSetStaminaPercent(float StaminaPercent);
	void OnEnergyUpdate(double Energy, bool bWarningActive);
	void OnEnergyDepletedClient();
	void OnSprintStarted();
	void OnEatToRefuel(double EnergyCost);
	void ReTryJumpExit();
	void ManualEnergyDepleted();
	void Check_Regen_on_Stopped_Riding();
	void Check_Regen_on_Started_Riding();
	void Activate_Regen();
	void Deactivate_Regen();
	void HandleJumpStopped();
	void ExecuteBufferedJumpExit();
	void CancelJumpExitAndJump();
	void MountLandedClient(struct FHitResult& Hit);
	void TryConvertBufferedJumpExitToJump();
	void MountLandedServer_JumpFatigue(struct FHitResult& Hit);
	void ExecuteUbergraph_CreatureBaseRidableComponent(int32 EntryPoint, class UActor* CallFunc_GetOwner_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_HasAuthority_ReturnValue, class UActor* CallFunc_GetOwner_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_HasAuthority_ReturnValue_1, const struct FVector& CallFunc_GetRiderLocation_Location, bool CallFunc_IsServer_ReturnValue, bool CallFunc_Vector_IsZero_ReturnValue, bool CallFunc_IsValid_ReturnValue_3, bool CallFunc_IsValid_ReturnValue_4, const struct FVector2D& CallFunc_Conv_VectorToVector2D_ReturnValue, double CallFunc_VSize2D_ReturnValue, class UActor* CallFunc_GetOwner_ReturnValue_2, bool CallFunc_Greater_DoubleDouble_ReturnValue, bool CallFunc_IsValid_ReturnValue_5, bool CallFunc_HasAuthority_ReturnValue_2, class UActor* CallFunc_GetOwner_ReturnValue_3, bool CallFunc_IsValid_ReturnValue_6, bool CallFunc_HasAuthority_ReturnValue_3, class UActor* CallFunc_GetOwner_ReturnValue_4, bool CallFunc_IsValid_ReturnValue_7, bool CallFunc_HasAuthority_ReturnValue_4, bool CallFunc_NotEqual_NameName_ReturnValue, class UActor* CallFunc_GetOwner_ReturnValue_5, bool CallFunc_IsValidClass_ReturnValue, class UFortAIPawn* K2Node_DynamicCast_AsFort_AIPawn, bool K2Node_DynamicCast_bSuccess, TArray<enum class ECollisionChannel>& K2Node_MakeArray_Array, class UActor* CallFunc_GetOwner_ReturnValue_6, class UFortPawn* K2Node_DynamicCast_AsFort_Pawn, bool K2Node_DynamicCast_bSuccess_1, class UFortPawn* K2Node_DynamicCast_AsFort_Pawn_1, bool K2Node_DynamicCast_bSuccess_2, double K2Node_CustomEvent_JumpPitchInterpSpeed, class UActor* CallFunc_GetOwner_ReturnValue_7, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, class UFortAIPawn* K2Node_DynamicCast_AsFort_AIPawn_1, bool K2Node_DynamicCast_bSuccess_3, class UActor* CallFunc_GetOwner_ReturnValue_8, bool CallFunc_IsDedicatedServer_ReturnValue, class UFortAIPawn* K2Node_DynamicCast_AsFort_AIPawn_2, bool K2Node_DynamicCast_bSuccess_4, class UActor* K2Node_CustomEvent_AIPawn, class UFortPlayerPawn* K2Node_CustomEvent_InteractingPlayerPawn, class UActor* CallFunc_GetOwner_ReturnValue_9, bool CallFunc_ToggleRiding_bChangedRiding, class UNPC_Pawn_Wildlife_Parent_C* K2Node_DynamicCast_AsNPC_Pawn_Wildlife_Parent, bool K2Node_DynamicCast_bSuccess_5, class UNPC_Pawn_Parent_C* K2Node_DynamicCast_AsNPC_Pawn_Parent, bool K2Node_DynamicCast_bSuccess_6, class UFortAIPawn* K2Node_DynamicCast_AsFort_AIPawn_3, bool K2Node_DynamicCast_bSuccess_7, bool CallFunc_NPC_UpdateInteract_EnabledInteract, bool CallFunc_IsDedicatedServer_ReturnValue_1, enum class EEndPlayReason K2Node_Event_EndPlayReason, bool K2Node_CustomEvent_Converted, class UFortPawn* K2Node_CustomEvent_InstigatorPawn, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_1, double CallFunc_GetTimeSeconds_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, bool CallFunc_IsBeingRidden_ReturnValue, bool CallFunc_IsValid_ReturnValue_8, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_2, bool CallFunc_IsBeingRidden_ReturnValue_1, bool CallFunc_TestThreshold_crossedThreshold, bool CallFunc_IsBeingRidden_ReturnValue_2, bool CallFunc_IsBeingRidden_ReturnValue_3, bool CallFunc_TestThreshold_crossedThreshold_1, bool CallFunc_IsBeingRidden_ReturnValue_4, double CallFunc_GetTimeSeconds_ReturnValue_1, double K2Node_CustomEvent_EnergyCost_1, double CallFunc_Subtract_DoubleDouble_ReturnValue_1, bool CallFunc_Less_DoubleDouble_ReturnValue, double CallFunc_DetermineRateOfChange_RateOfChange, bool CallFunc_NotEqual_DoubleDouble_ReturnValue, double CallFunc_UpdateValue_updatedValue, bool CallFunc_UpdateValue_energyDepleted, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_IsValid_ReturnValue_9, bool CallFunc_IsValid_ReturnValue_10, class URiderComponent* K2Node_Event_Rider, class URiderComponent* K2Node_Event_Rider_1, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_ApplyGEToSelf_isValidClass, bool CallFunc_ApplyGEToSelf_isValidClass_1, bool CallFunc_ApplyGEToSelf_isValidClass_2, bool CallFunc_IsValid_ReturnValue_11, class UActor* CallFunc_GetOwner_ReturnValue_10, bool CallFunc_IsValid_ReturnValue_12, class UFortPawn* K2Node_DynamicCast_AsFort_Pawn_2, bool K2Node_DynamicCast_bSuccess_8, class UActor* CallFunc_GetOwner_ReturnValue_11, bool Temp_bool_Has_Been_Initd_Variable, bool K2Node_Event_bAbilityInputHeld, bool K2Node_Event_bForceCancel, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsValid_ReturnValue_13, bool CallFunc_IsSwimming_IsSwimming, bool CallFunc_IsValid_ReturnValue_14, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_3, bool CallFunc_LessEqual_DoubleDouble_ReturnValue, enum class EEvaluateCurveTableResult CallFunc_EvaluateCurveTableRow_OutResult, float CallFunc_EvaluateCurveTableRow_OutXY, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_IsBeingRidden_ReturnValue_5, bool CallFunc_NotEqual_DoubleDouble_ReturnValue_1, class UActor* CallFunc_GetOwner_ReturnValue_12, class UNPC_Pawn_Parent_C* K2Node_DynamicCast_AsNPC_Pawn_Parent_1, bool K2Node_DynamicCast_bSuccess_9, class UNPC_Pawn_Parent_C* K2Node_DynamicCast_AsNPC_Pawn_Parent_2, bool K2Node_DynamicCast_bSuccess_10, bool CallFunc_NPC_UpdateInteract_EnabledInteract_1, bool CallFunc_NPC_CanBeInteractedWith_CanInteract, class UFortAbilitySystemComponent* CallFunc_GetFortAbilitySystemComponent_ReturnValue, bool CallFunc_NPC_UpdateInteract_EnabledInteract_2, const struct FActiveGameplayEffectHandle& CallFunc_BP_FortApplyGameplayEffectToSelf_ReturnValue, int32 CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue, int32 CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue_1, class UPlayerRiderComponent_C* K2Node_DynamicCast_AsPlayer_Rider_Component, bool K2Node_DynamicCast_bSuccess_11, class UActor* CallFunc_GetOwner_ReturnValue_13, class UAbilityAsync_WaitGameplayTagRemoved* CallFunc_WaitGameplayTagRemoveFromActor_ReturnValue, bool Temp_bool_IsClosed_Variable, bool CallFunc_IsValid_ReturnValue_15, bool CallFunc_IsSprintToggleable_ReturnValue, bool CallFunc_IsSprintToggleable_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_16, bool CallFunc_IsSprintToggleable_ReturnValue_2, bool CallFunc_Not_PreBool_ReturnValue_2, TScriptInterface<class UGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput, bool CallFunc_HasAnyMatchingGameplayTags_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_2, bool CallFunc_IsSprintToggleable_ReturnValue_3, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1, float K2Node_Event_StaminaPercent, double K2Node_CustomEvent_Energy, bool K2Node_CustomEvent_bWarningActive, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_4, bool CallFunc_Greater_DoubleDouble_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_17, class UActor* CallFunc_GetOwner_ReturnValue_14, bool CallFunc_IsValid_ReturnValue_18, class UFortPlayerPawnAthena* K2Node_DynamicCast_AsFort_Player_Pawn_Athena, bool K2Node_DynamicCast_bSuccess_12, double K2Node_CustomEvent_EnergyCost, class UActor* CallFunc_GetOwner_ReturnValue_15, class UActor* CallFunc_GetOwner_ReturnValue_16, bool CallFunc_IsValid_ReturnValue_19, bool CallFunc_IsValid_ReturnValue_20, bool CallFunc_HasAuthority_ReturnValue_5, bool CallFunc_HasAuthority_ReturnValue_6, class UActor* CallFunc_GetOwner_ReturnValue_17, bool CallFunc_IsValid_ReturnValue_21, bool CallFunc_IsValid_ReturnValue_22, bool CallFunc_HasAuthority_ReturnValue_7, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_5, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_6, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_7, bool CallFunc_CanJumpExit_CanJumpExit, bool CallFunc_IsValid_ReturnValue_23, bool CallFunc_IsValid_ReturnValue_24, bool CallFunc_IsFalling_ReturnValue, bool CallFunc_CanStartSprinting_ReturnValue, bool CallFunc_CanStartSprinting_ReturnValue_1, bool CallFunc_ApplyGEToSelf_isValidClass_3, bool CallFunc_LessEqual_DoubleDouble_ReturnValue_1, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_8, float CallFunc_EvaluateCurveTableRow_OutXY_1, bool CallFunc_EvaluateCurveTableRow_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_3, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, class UActor* CallFunc_GetOwner_ReturnValue_18, bool CallFunc_BooleanAND_ReturnValue_4, class UAbilityAsync_WaitGameplayTagAdded* CallFunc_WaitGameplayTagAddToActor_ReturnValue, bool CallFunc_IsValid_ReturnValue_25, class UAbilityAsync_WaitGameplayTagRemoved* CallFunc_WaitGameplayTagRemoveFromActor_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_26, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_9, enum class EEvaluateCurveTableResult CallFunc_EvaluateCurveTableRow_OutResult_1, float CallFunc_EvaluateCurveTableRow_OutXY_2, bool CallFunc_EqualEqual_DoubleDouble_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess_1, class UActor* CallFunc_GetOwner_ReturnValue_19, bool CallFunc_ShouldBufferJumpExitToRetryJump_Output, class UFortAIPawn* K2Node_DynamicCast_AsFort_AIPawn_4, bool K2Node_DynamicCast_bSuccess_13, const struct FHitResult& K2Node_CustomEvent_Hit_1, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_10, bool Temp_bool_Variable, TSubclassOf<class UGameplayEffect> K2Node_Select_Default, const struct FActiveGameplayEffectHandle& CallFunc_BP_FortApplyGameplayEffectToSelf_ReturnValue_1, bool CallFunc_Should_Convert_Jump_Exit_to_Jump_Out, const struct FCurveTableRowHandle& K2Node_MakeStruct_CurveTableRowHandle, const struct FScalableFloat& K2Node_MakeStruct_ScalableFloat, float CallFunc_GetValueAtLevel_ReturnValue, const struct FCurveTableRowHandle& K2Node_MakeStruct_CurveTableRowHandle_1, const struct FScalableFloat& K2Node_MakeStruct_ScalableFloat_1, class UFortAbilitySystemComponent* CallFunc_GetFortAbilitySystemComponent_ReturnValue_1, float CallFunc_GetValueAtLevel_ReturnValue_1, const struct FHitResult& K2Node_CustomEvent_Hit, bool CallFunc_ShouldBufferJumpExitToRetryJump_Output_1, bool CallFunc_GetValueAsBool_ReturnValue, bool CallFunc_IsValid_ReturnValue_27, bool CallFunc_GetValueAsBool_ReturnValue_1, bool CallFunc_GetValueAsBool_ReturnValue_2, const struct FRidingPettingData& CallFunc_GetPettingData_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_3, double K2Node_VariableSet_currentEnergyValue_ImplicitCast, double K2Node_VariableSet_CurrentEnergyRateOfRecharge_ImplicitCast, double CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast, double CallFunc_UpdateLootAnimalGlow_Scale_ImplicitCast, double CallFunc_UpdateLootAnimalGlow_Scale_ImplicitCast_1);
	void RidableUIUpdateEnergy__DelegateSignature(double Energy, bool bIsResting);
	void RidableUIStart__DelegateSignature(class FText Name, const struct FSlateBrush& Icon);
	void AudioOnJumpApex__DelegateSignature();
	void AudioOnJump__DelegateSignature(double JumpPitchInterpSpeed);
};

}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
