#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x460 (0xFE8 - 0xB88)
// BlueprintGeneratedClass GA_Athena_Consumable_Throw_Parent.GA_Athena_Consumable_Throw_Parent_C
class UGA_Athena_Consumable_Throw_Parent_C : public UFortGameplayAbility_ThrowTrajectory
{
public:
	struct FPointerToUberGraphFrame              UberGraphFrame;                                    // 0xB88(0x8)(ZeroConstructor, Transient, DuplicateTransient)
	class UFortPlayerPawn*                       PlayerPawn;                                        // 0xB90(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                         AbilityKeyPressed;                                 // 0xB98(0x1)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         InThrowWindup;                                     // 0xB99(0x1)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_3B31[0x6];                                     // Fixing Size After Last Property 
	double                                       AdditionalThrowAngle;                              // 0xBA0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       MaxTossPitch;                                      // 0xBA8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                               GrenadeTargetingOriginOffset_Crouched;             // 0xBB0(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortProjectileBase*                   SpawnedProjectile;                                 // 0xBC8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                        bIsEnabled;                                        // 0xBD0(0x28)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                 Tag_BlockAbilityActivation;                        // 0xBF8(0x20)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                ThrownProjectileClass;                             // 0xC18(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                         bIsSecondaryFire;                                  // 0xC20(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         bThrowInstantly;                                   // 0xC21(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_3B35[0x6];                                     // Fixing Size After Last Property 
	struct FScalableFloat                        ProjectileGravityScale;                            // 0xC28(0x28)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                        ProjectileSpeed;                                   // 0xC50(0x28)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UBP_ProjectileTrajectory_C*            TrajectoryIndicator;                               // 0xC78(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                TrajectoryIndicatorClass;                          // 0xC80(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                       TrajectoryUpdateInterval;                          // 0xC88(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                          CookMontage;                                       // 0xC90(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                          CookMontage1P;                                     // 0xC98(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                          ThrowMontage;                                      // 0xCA0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                          ThrowMontage1P;                                    // 0xCA8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                          GC_OnThrow;                                        // 0xCB0(0x4)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_3B3F[0x4];                                     // Fixing Size After Last Property 
	double                                       TrajectoryTimeStep;                                // 0xCB8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        TrajectoryMaxSteps;                                // 0xCC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                  TrajectoryCollisionProfileName;                    // 0xCC4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                          GC_CookLoop;                                       // 0xCC8(0x4)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_3B40[0x4];                                     // Fixing Size After Last Property 
	class UClass*                                GE_InWindup;                                       // 0xCD0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                CameraMode;                                        // 0xCD8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                          EC_DefaultExplosion;                               // 0xCE0(0x4)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                        ExplosionEffectLevel;                              // 0xCE4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                          EC_DefaultHit;                                     // 0xCE8(0x4)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                        HitEffectLevel;                                    // 0xCEC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_            OnProjectileSpawn;                                 // 0xCF0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                         HasAdditionalExplosion;                            // 0xD00(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_3B42[0x3];                                     // Fixing Size After Last Property 
	struct FGameplayTag                          EC_AdditionalExplosion;                            // 0xD04(0x4)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                        AdditionalExplodeLevel;                            // 0xD08(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_3B43[0x4];                                     // Fixing Size After Last Property 
	struct FGameplayTagContainer                 QuestCreditTargetTag;                              // 0xD10(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	bool                                         ReturnPhysicalMaterial;                            // 0xD30(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_3B44[0x7];                                     // Fixing Size After Last Property 
	struct FGameplayTagContainer                 Tags_UseNullFailedActivateReason;                  // 0xD38(0x20)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                         bIsThrowing;                                       // 0xD58(0x1)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         SpawnedOnEquip;                                    // 0xD59(0x1)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_3B48[0x2];                                     // Fixing Size After Last Property 
	struct FActiveGameplayEffectHandle           Handle_GE_InWindup;                                // 0xD5C(0x8)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_3B4A[0x4];                                     // Fixing Size After Last Property 
	struct FFortGameplayEffectContainerSpec      HitContainerSpec;                                  // 0xD68(0xB8)(Edit, BlueprintVisible, Transient, DisableEditOnInstance)
	struct FFortGameplayEffectContainerSpec      ExplosionContainerSpec;                            // 0xE20(0xB8)(Edit, BlueprintVisible, Transient, DisableEditOnInstance)
	struct FFortGameplayEffectContainerSpec      AdditionalExplosionContainerSpec;                  // 0xED8(0xB8)(Edit, BlueprintVisible, Transient, DisableEditOnInstance)
	bool                                         bPreventDeploymentInBlockAreas;                    // 0xF90(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_3B4B[0x3];                                     // Fixing Size After Last Property 
	float                                        DeployableBlockingAreaCheckRadius;                 // 0xF94(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                               DeployableBlockingAreaCheckOffset;                 // 0xF98(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortProjectileTrajectoryData         Projectile_Trajectory_Data;                        // 0xFB0(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	float                                        Trajectory_Max_Distance_Between_Spline_Points;     // 0xFD0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        Trajectory_Max_Bounces;                            // 0xFD4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        Trajectory_Initial_Distance;                       // 0xFD8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         Projectile_Trajectory_Data_Initialized;            // 0xFDC(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_3B4C[0x3];                                     // Fixing Size After Last Property 
	double                                       Projectile_Gravity_Scale_to_Use;                   // 0xFE0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

	static class UClass* StaticClass();
	static class UGA_Athena_Consumable_Throw_Parent_C* GetDefaultObj();

	bool ShouldOnlyShowTrajectoryOnUse();
	class UFortProjectileTrajectory* SpawnTrajectoryIndicator(bool bSpawnOnEquip, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class UFortPlayerPawn* CallFunc_GetOwningPlayer_Player_Pawn, bool CallFunc_IsLocallyControlled_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	TSubclassOf<class UFortProjectileTrajectory> GetProjectileTrajectoryActor();
	void GetProjectileTrajectoryPoints(TArray<struct FVector>* OutSplinePoints, TArray<struct FVector>* OutSplineTangents, struct FHitResult* OutHitResult, class UFortPlayerPawn* CallFunc_GetOwningPlayer_Player_Pawn, const struct FVector& CallFunc_GetSpawnLocationAndRotation_Location, const struct FRotator& CallFunc_GetSpawnLocationAndRotation_Rotation, const struct FVector& CallFunc_Conv_RotatorToVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FHitResult& CallFunc_CalculateProjectileTrajectory_OutHitResult, TArray<struct FVector>& CallFunc_CalculateProjectileTrajectory_OutSplinePoints, TArray<struct FVector>& CallFunc_CalculateProjectileTrajectory_OutSplineTangents, double CallFunc_Multiply_VectorFloat_B_ImplicitCast);
	void Get_Throw_Montage(class UAnimMontage** Montage, bool CallFunc_IsValid_ReturnValue, class UFortPlayerPawn* CallFunc_GetOwningPlayer_Player_Pawn, class UController* CallFunc_GetController_ReturnValue, class UFortPlayerController* K2Node_DynamicCast_AsFort_Player_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsUsingFirstPersonCamera_ReturnValue);
	void GetCookMontage(class UAnimMontage** Montage, class UFortPlayerPawn* CallFunc_GetOwningPlayer_Player_Pawn, class UController* CallFunc_GetController_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UFortPlayerController* K2Node_DynamicCast_AsFort_Player_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsUsingFirstPersonCamera_ReturnValue);
	void CalculateProjectileTrajectory(class UFortPawn* Instigator, const struct FVector& InitialLocation, const struct FVector& InitialVelocity, struct FHitResult* OutHitResult, TArray<struct FVector>* OutSplinePoints, TArray<struct FVector>* OutSplineTangents, const TArray<class UActor*>& ProjectileIgnoredActors, TArray<class UActor*>& CallFunc_GetProjectileIgnoredActors_ReturnValue, double CallFunc_FMax_ReturnValue, bool CallFunc_IsValid_ReturnValue, double CallFunc_FMax_ReturnValue_1, int32 Temp_int_Variable, bool Temp_bool_Variable, int32 Temp_int_Variable_1, bool Temp_bool_Variable_1, bool CallFunc_NotEqual_NameName_ReturnValue, int32 K2Node_Select_Default, const struct FHitResult& CallFunc_CalculateProjectileTrajectorySplineWithHitProfile_OutHitResult, TArray<struct FVector>& CallFunc_CalculateProjectileTrajectorySplineWithHitProfile_OutSplinePoints, TArray<struct FVector>& CallFunc_CalculateProjectileTrajectorySplineWithHitProfile_OutSplineTangents, int32 K2Node_Select_Default_1, const struct FHitResult& CallFunc_CalculateProjectileTrajectorySplineWithHit_OutHitResult, TArray<struct FVector>& CallFunc_CalculateProjectileTrajectorySplineWithHit_OutSplinePoints, TArray<struct FVector>& CallFunc_CalculateProjectileTrajectorySplineWithHit_OutSplineTangents, double CallFunc_FMax_A_ImplicitCast, double CallFunc_FMax_B_ImplicitCast, float CallFunc_CalculateProjectileTrajectorySplineWithHit_TraceExtent_ImplicitCast, double CallFunc_FMax_A_ImplicitCast_1, double CallFunc_FMax_B_ImplicitCast_1, float CallFunc_CalculateProjectileTrajectorySplineWithHitProfile_TraceExtent_ImplicitCast, float CallFunc_CalculateProjectileTrajectorySplineWithHitProfile_TimeStep_ImplicitCast, float CallFunc_CalculateProjectileTrajectorySplineWithHit_TimeStep_ImplicitCast);
	bool K2_CanActivateAbility(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayAbilitySpecHandle& Handle, struct FGameplayTagContainer* RelevantTags, bool Temp_bool_Variable, TScriptInterface<class UGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_HasAnyMatchingGameplayTags_ReturnValue);
	void IsTrajectoryLocationValid(TArray<struct FVector>& SplinePoints, TArray<struct FVector>& SplineTangents, const struct FHitResult& TrajectoryHitResult, bool* bIsLocationValid, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class UActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, class FName CallFunc_BreakHitResult_BoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, class UFortPlayerPawn* CallFunc_GetOwningPlayer_Player_Pawn, bool CallFunc_IsOverlappingDeployableBlockVolume_bOverlapping, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void OnUpdateTrajectory(TArray<struct FVector>& SplinePoints, TArray<struct FVector>& SplineTangents, const struct FHitResult& TrajectoryHitResult);
	void AddValidCamera(bool CallFunc_IsValidClass_ReturnValue);
	void GetOwningPlayer(class UFortPlayerPawn** Player_Pawn, bool CallFunc_IsValid_ReturnValue, const struct FGameplayAbilityActorInfo& CallFunc_GetActorInfo_ReturnValue, class UFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn, bool K2Node_DynamicCast_bSuccess);
	void ExecuteThrowGC(bool CallFunc_IsGameplayTagValid_ReturnValue);
	void K2_OverrideFailedReason(struct FGameplayTagContainer& FailedReason, struct FGameplayTagContainer* OverridenFailedReason, const struct FGameplayTagContainer& CallFunc_K2_OverrideFailedReason_OverridenFailedReason, class UActor* CallFunc_GetAvatarActorFromActorInfo_ReturnValue, class UFortPawn* K2Node_DynamicCast_AsFort_Pawn, bool K2Node_DynamicCast_bSuccess, TScriptInterface<class UGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput, bool CallFunc_HasAnyMatchingGameplayTags_ReturnValue);
	void RemoveCookGC(bool CallFunc_IsGameplayTagValid_ReturnValue);
	void AddCookGC(bool CallFunc_IsGameplayTagValid_ReturnValue);
	void GetProjectileAdditionalThrowAngleToUse(double* AdditionalThrowAngleToUse, class UFortWeapon* AbilitySourceWeapon, float CallFunc_GetProjectilePitchOffset_ReturnValue, bool CallFunc_NotEqual_DoubleDouble_ReturnValue, bool CallFunc_IsValid_ReturnValue, double CallFunc_SelectFloat_ReturnValue, class UFortWeapon* CallFunc_GetCurrentSourceWeapon_ReturnValue, double CallFunc_NotEqual_DoubleDouble_A_ImplicitCast, double CallFunc_SelectFloat_A_ImplicitCast);
	void GetProjectileInitialGravityScaleToUse(double* GravityScaleToUse, const class FString& GetProjectileInitialGravityScaleContext, float CallFunc_GetValueAtLevel_ReturnValue, bool CallFunc_IsValidClass_ReturnValue, float CallFunc_EvaluateCurveTableRow_OutXY, bool CallFunc_EvaluateCurveTableRow_ReturnValue, bool CallFunc_IsCurveTableRowValid_ReturnValue, double K2Node_FunctionResult_GravityScaleToUse_ImplicitCast, double K2Node_FunctionResult_GravityScaleToUse_ImplicitCast_1);
	void GetProjectileInitialSpeedToUse(double* ProjectileSpeedToUse, const class FString& GetProjectileInitialSpeedToUseContext, float CallFunc_GetValueAtLevel_ReturnValue, bool CallFunc_IsValidClass_ReturnValue, float CallFunc_EvaluateCurveTableRow_OutXY, bool CallFunc_EvaluateCurveTableRow_ReturnValue, bool CallFunc_IsCurveTableRowValid_ReturnValue, double K2Node_FunctionResult_ProjectileSpeedToUse_ImplicitCast, double K2Node_FunctionResult_ProjectileSpeedToUse_ImplicitCast_1);
	void CleanupTrajectory(bool CallFunc_IsValid_ReturnValue);
	void PostThrowCleanup(bool CallFunc_Not_PreBool_ReturnValue);
	void UpdateTrajectorySpline(TArray<struct FVector>& CallFunc_GetProjectileTrajectoryPoints_OutSplinePoints, TArray<struct FVector>& CallFunc_GetProjectileTrajectoryPoints_OutSplineTangents, const struct FHitResult& CallFunc_GetProjectileTrajectoryPoints_OutHitResult, bool CallFunc_IsTrajectoryLocationValid_bIsLocationValid, bool CallFunc_IsValid_ReturnValue);
	void SetupDummyProjectile(class UFortPlayerPawn* CallFunc_GetOwningPlayer_Player_Pawn, const struct FTransform& CallFunc_GetTransform_ReturnValue, bool CallFunc_IsValidClass_ReturnValue, class UActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, class UFortProjectileTrajectory* CallFunc_FinishSpawningActor_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UBP_ProjectileTrajectory_C* K2Node_DynamicCast_AsBP_Projectile_Trajectory, bool K2Node_DynamicCast_bSuccess);
	void OnProjectileSpawned(class UFortProjectileBase* SpawnedProjectile);
	void SpawnThrownProjectile(class UClass* ProjectileClass, struct FVector& ProjectileSpawnLocation, struct FRotator& ProjectileSpawnDirection, const struct FFortGameplayEffectContainerSpec& HitEffectContainerSpec, const struct FFortGameplayEffectContainerSpec& ExplosionEffectContainerSpec, double ProjectileInitialSpeed, double ProjectileGravityScale, class UFortProjectileBase** SpawnedProjectile, class UFortPlayerPawn* CallFunc_GetOwningPlayer_Player_Pawn, class UFortProjectileBase* CallFunc_SpawnProjectile_ReturnValue, float CallFunc_SpawnProjectile_InitialSpeed_ImplicitCast, float CallFunc_SpawnProjectile_GravityScale_ImplicitCast);
	void OnProjectileSetup();
	void GetSpawnLocationAndRotation(struct FVector* Location, struct FRotator* Rotation, double CallFunc_GetProjectileAdditionalThrowAngleToUse_AdditionalThrowAngleToUse, bool Temp_bool_Variable, bool Temp_bool_Variable_1, class UFortPlayerPawn* CallFunc_GetOwningPlayer_Player_Pawn, const struct FRotator& CallFunc_GetDefaultTargetingRotation_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, class UFortPlayerPawn* CallFunc_GetOwningPlayer_Player_Pawn_1, double CallFunc_Add_DoubleDouble_ReturnValue, bool CallFunc_IsSurfaceSwimming_ReturnValue, float CallFunc_NormalizeAxis_ReturnValue, double CallFunc_FMin_ReturnValue, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, const struct FRotator& CallFunc_MakeRotator_ReturnValue, float CallFunc_BreakRotator_Roll_1, float CallFunc_BreakRotator_Pitch_1, float CallFunc_BreakRotator_Yaw_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& K2Node_Select_Default, const struct FVector& K2Node_Select_Default_1, const struct FVector& CallFunc_RotateAngleAxis_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, double CallFunc_Add_DoubleDouble_A_ImplicitCast, float CallFunc_NormalizeAxis_Angle_ImplicitCast, double CallFunc_FMin_A_ImplicitCast, float CallFunc_MakeRotator_Pitch_ImplicitCast);
	void PrethrowSetup(const struct FActiveGameplayEffectHandle& CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue, const struct FGameplayAbilityActorInfo& CallFunc_GetActorInfo_ReturnValue, class UFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn, bool K2Node_DynamicCast_bSuccess);
	void OnFinish_96367E244486362FDDE5ED87D909C17B();
	void Completed_01C5B37D48E3DC6F82DDC58640CE2A27(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Cancelled_01C5B37D48E3DC6F82DDC58640CE2A27(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Triggered_01C5B37D48E3DC6F82DDC58640CE2A27(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void OnRelease_76BCD7D74FEC0FB6EFBBDFB57A0107B0(float TimeHeld);
	void OnCancelled_D89CCB8E47DB19D6DCF41F96F207CC3D();
	void OnInterrupted_D89CCB8E47DB19D6DCF41F96F207CC3D();
	void OnBlendOut_D89CCB8E47DB19D6DCF41F96F207CC3D();
	void OnCompleted_D89CCB8E47DB19D6DCF41F96F207CC3D();
	void EventReceived_E3F1B58D4D7A664CB557709F9DAE3C9F(const struct FGameplayEventData& Payload);
	void OnSync_9C8FDC8044B1444580A9809C231F294D();
	void EventReceived_05B8BFFC4ECA26FE5390E9BC303AACA6(const struct FGameplayEventData& Payload);
	void AttemptSpawnThrownProjectile();
	void InitTrajectoryVariables();
	void ThrowProjectile();
	void ThrowMontageStarted();
	void OnAbilityInputReleased();
	void K2_ActivateAbility();
	void UpdateTrajectory();
	void CleanupTrajectoryIndicatorOnUnequip();
	void K2_OnEndAbility(bool bWasCancelled);
	void ExecuteUbergraph_GA_Athena_Consumable_Throw_Parent(int32 EntryPoint, bool CallFunc_IsUsingTouch_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, const struct FGameplayAbilityTargetDataHandle& K2Node_CustomEvent_TargetData, const struct FGameplayTag& K2Node_CustomEvent_ApplicationTag, const struct FGameplayTag& Temp_struct_Variable, const struct FGameplayAbilityTargetDataHandle& Temp_struct_Variable_1, bool CallFunc_IsValid_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_1, class UFortPlayerController* CallFunc_GetFortPlayerControllerFromActor_ReturnValue, class UFortWeaponItemDefinition* CallFunc_GetWeaponData_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class UFortQuestManager* CallFunc_GetQuestManager_ReturnValue, float K2Node_CustomEvent_TimeHeld, float Temp_real_Variable, class UAbilityTask_WaitInputRelease* CallFunc_WaitInputRelease_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_2, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_3, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_4, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_5, const struct FGameplayEventData& K2Node_CustomEvent_Payload_1, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_6, const struct FGameplayEventData& Temp_struct_Variable_2, class UAbilityTask_WaitGameplayEvent* CallFunc_WaitGameplayEvent_ReturnValue, bool CallFunc_IsValid_ReturnValue_3, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_7, class UAbilityTask_NetworkSyncPoint* CallFunc_WaitNetSync_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_8, bool CallFunc_IsValid_ReturnValue_4, const struct FGameplayEventData& K2Node_CustomEvent_Payload, const struct FGameplayEventData& Temp_struct_Variable_3, class UAbilityTask_WaitGameplayEvent* CallFunc_WaitGameplayEvent_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_5, bool CallFunc_IsValid_ReturnValue_6, class UFortWeaponItemDefinition* CallFunc_GetWeaponData_ReturnValue_1, bool CallFunc_K2_CommitAbility_ReturnValue, bool CallFunc_IsServer_ReturnValue, const struct FVector& CallFunc_GetSpawnLocationAndRotation_Location, const struct FRotator& CallFunc_GetSpawnLocationAndRotation_Rotation, class UFortPlayerPawn* CallFunc_GetOwningPlayer_Player_Pawn, class UFortProjectileTrajectory* CallFunc_SpawnTrajectoryIndicator_ReturnValue, const struct FFortGameplayEffectContainerSpec& CallFunc_MakeGameplayEffectContainerSpec_ReturnValue, const struct FFortGameplayEffectContainerSpec& CallFunc_MakeGameplayEffectContainerSpec_ReturnValue_1, const struct FGameplayAbilityTargetDataHandle& K2Node_CustomEvent_TargetData_1, const struct FGameplayTag& K2Node_CustomEvent_ApplicationTag_1, const struct FFortGameplayEffectContainerSpec& CallFunc_MakeGameplayEffectContainerSpec_ReturnValue_2, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_9, class UAbilityTask_WaitDelay* CallFunc_WaitDelay_ReturnValue, bool CallFunc_IsValid_ReturnValue_7, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_10, bool CallFunc_IsDedicatedServer_ReturnValue, bool CallFunc_GetValueAsBool_ReturnValue, bool K2Node_Event_bWasCancelled, double CallFunc_GetProjectileInitialSpeedToUse_ProjectileSpeedToUse, double CallFunc_GetProjectileInitialGravityScaleToUse_GravityScaleToUse, const struct FFortProjectileTrajectoryData& CallFunc_GetProjectileTrajectoryData_TrajectoryData, const struct FGameplayAbilityTargetDataHandle& K2Node_CustomEvent_TargetData_2, const struct FGameplayTag& K2Node_CustomEvent_ApplicationTag_2, bool CallFunc_Not_PreBool_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_11, class UAnimMontage* CallFunc_GetCookMontage_Montage, class UFortProjectileBase* CallFunc_SpawnThrownProjectile_SpawnedProjectile, class UAbilityTask_PlayMontageAndWait* CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue, const struct FGameplayEventData& K2Node_MakeStruct_GameplayEventData, bool CallFunc_IsValid_ReturnValue_8, const struct FGameplayEventData& K2Node_MakeStruct_GameplayEventData_1, bool CallFunc_IsValid_ReturnValue_9, class UAnimMontage* CallFunc_Get_Throw_Montage_Montage, class UFortAbilityTask_PlayMontageWaitTarget* CallFunc_PlayMontageWaitTarget_ReturnValue, bool CallFunc_IsValid_ReturnValue_10, float CallFunc_GetProjectileTrajectoryData_DefaultGravityScale_ImplicitCast, float CallFunc_GetProjectileTrajectoryData_DefaultSpeed_ImplicitCast, double CallFunc_SpawnThrownProjectile_ProjectileInitialSpeed_ImplicitCast);
	void OnProjectileSpawn__DelegateSignature();
};

}


